// Code generated by goagen v1.3.1, DO NOT EDIT.
//
// API "types": Application Media Types
//
// Command:
// $ goagen
// --design=github.com/nikhil-thomas/technik-dojo/goa-exp/goa-examples/02_types/design
// --out=$(GOPATH)/src/github.com/nikhil-thomas/technik-dojo/goa-exp/goa-examples/02_types
// --version=v1.3.1

package client

import (
	uuid "github.com/goadesign/goa/uuid"
	"net/http"
	"time"
)

// ArrayPrismMedia is a media type with one attribute per primitive type (default view)
//
// Identifier: application/vnd.goadesign.examples.arrayprism; view=default
type GoadesignExamplesArrayprism struct {
	// Any attribute
	AnyAtt interface{} `form:"any_att,omitempty" json:"any_att,omitempty" yaml:"any_att,omitempty" xml:"any_att,omitempty"`
	// Boolean attribute
	BoolAtt *bool `form:"bool_att,omitempty" json:"bool_att,omitempty" yaml:"bool_att,omitempty" xml:"bool_att,omitempty"`
	// DateTime attribute
	DateTimeAtt *time.Time `form:"date_time_att,omitempty" json:"date_time_att,omitempty" yaml:"date_time_att,omitempty" xml:"date_time_att,omitempty"`
	// Integer attribute
	IntAtt *int `form:"int_att,omitempty" json:"int_att,omitempty" yaml:"int_att,omitempty" xml:"int_att,omitempty"`
	// Number attribute
	NumAtt *float64 `form:"num_att,omitempty" json:"num_att,omitempty" yaml:"num_att,omitempty" xml:"num_att,omitempty"`
	// String attribute
	StringAtt *string `form:"string_att,omitempty" json:"string_att,omitempty" yaml:"string_att,omitempty" xml:"string_att,omitempty"`
	// UUID attribute
	UUIDAtt *uuid.UUID `form:"uuid_att,omitempty" json:"uuid_att,omitempty" yaml:"uuid_att,omitempty" xml:"uuid_att,omitempty"`
}

// DecodeGoadesignExamplesArrayprism decodes the GoadesignExamplesArrayprism instance encoded in resp body.
func (c *Client) DecodeGoadesignExamplesArrayprism(resp *http.Response) (*GoadesignExamplesArrayprism, error) {
	var decoded GoadesignExamplesArrayprism
	err := c.Decoder.Decode(&decoded, resp.Body, resp.Header.Get("Content-Type"))
	return &decoded, err
}

// HashPrismMedia is a media type with one hash member per primitive type: type as value, and string as key (default view)
//
// Identifier: application/vnd.goadesign.examples.hashprism; view=default
type GoadesignExamplesHashprism struct {
	// Hash with Any value member
	AnyValHash map[string]interface{} `form:"any_val_hash,omitempty" json:"any_val_hash,omitempty" yaml:"any_val_hash,omitempty" xml:"any_val_hash,omitempty"`
	// Hash with Boolean value member
	BoolValHash map[string]bool `form:"bool_val_hash,omitempty" json:"bool_val_hash,omitempty" yaml:"bool_val_hash,omitempty" xml:"bool_val_hash,omitempty"`
	// Hash with DateTime value member
	DateTimeValHash map[string]time.Time `form:"date_time_val_hash,omitempty" json:"date_time_val_hash,omitempty" yaml:"date_time_val_hash,omitempty" xml:"date_time_val_hash,omitempty"`
	// Hash with Integer value member
	IntValHash map[string]int `form:"int_val_hash,omitempty" json:"int_val_hash,omitempty" yaml:"int_val_hash,omitempty" xml:"int_val_hash,omitempty"`
	// Hash with Number value member
	NumValHash map[string]float64 `form:"num_val_hash,omitempty" json:"num_val_hash,omitempty" yaml:"num_val_hash,omitempty" xml:"num_val_hash,omitempty"`
	// Hash with String value member
	StringValHash map[string]string `form:"string_val_hash,omitempty" json:"string_val_hash,omitempty" yaml:"string_val_hash,omitempty" xml:"string_val_hash,omitempty"`
	// Hash with UUID value member
	UUIDValHash map[string]uuid.UUID `form:"uuid_val_hash,omitempty" json:"uuid_val_hash,omitempty" yaml:"uuid_val_hash,omitempty" xml:"uuid_val_hash,omitempty"`
}

// DecodeGoadesignExamplesHashprism decodes the GoadesignExamplesHashprism instance encoded in resp body.
func (c *Client) DecodeGoadesignExamplesHashprism(resp *http.Response) (*GoadesignExamplesHashprism, error) {
	var decoded GoadesignExamplesHashprism
	err := c.Decoder.Decode(&decoded, resp.Body, resp.Header.Get("Content-Type"))
	return &decoded, err
}

// Prism media is a media type with ie attribute per primitive type (default view)
//
// Identifier: application/vnd.goadesign.examples.prism; view=default
type GoadesignExamplesPrism struct {
	// Any attribute
	AnyAtt interface{} `form:"any_att,omitempty" json:"any_att,omitempty" yaml:"any_att,omitempty" xml:"any_att,omitempty"`
	// Boolean attribute
	BoolAtt *bool `form:"bool_att,omitempty" json:"bool_att,omitempty" yaml:"bool_att,omitempty" xml:"bool_att,omitempty"`
	// DateTime attribute
	DateTimeAtt *time.Time `form:"date_time_att,omitempty" json:"date_time_att,omitempty" yaml:"date_time_att,omitempty" xml:"date_time_att,omitempty"`
	// Integer attribute
	IntAtt *int `form:"int_att,omitempty" json:"int_att,omitempty" yaml:"int_att,omitempty" xml:"int_att,omitempty"`
	// Number attribute
	NumAtt *float64 `form:"num_att,omitempty" json:"num_att,omitempty" yaml:"num_att,omitempty" xml:"num_att,omitempty"`
	// String attribute
	StringAtt *string `form:"string_att,omitempty" json:"string_att,omitempty" yaml:"string_att,omitempty" xml:"string_att,omitempty"`
	// UUID attribute
	UUIDAtt *uuid.UUID `form:"uuid_att,omitempty" json:"uuid_att,omitempty" yaml:"uuid_att,omitempty" xml:"uuid_att,omitempty"`
}

// DecodeGoadesignExamplesPrism decodes the GoadesignExamplesPrism instance encoded in resp body.
func (c *Client) DecodeGoadesignExamplesPrism(resp *http.Response) (*GoadesignExamplesPrism, error) {
	var decoded GoadesignExamplesPrism
	err := c.Decoder.Decode(&decoded, resp.Body, resp.Header.Get("Content-Type"))
	return &decoded, err
}
